const e=new class{constructor(){}estimateAge(e={}){return new Promise(((n,t)=>{let a=!1;const r=Math.random().toString(36).substring(2,15),i=e.localTesting?"../index.html":"https://universal-verify.github.io/age-estimator/",s=e.localTesting?window.location.origin:"https://universal-verify.github.io",o=e.livenessCheck||!1,c=window.open(i,"_blank");if(!c)return void t("POPUP_BLOCKED");function cleanup(){window.removeEventListener("message",handler),clearInterval(l)}function handler(e){if(e.source===c)if("age-estimation-result"===e.data.type){if(e.data.nonce!==r)return;a=!0,n(e.data.age),c.close(),cleanup()}else if("age-estimation-error"===e.data.type){if(e.data.nonce!==r)return;a=!0,e.data.error.includes("webcam")?t("WEBCAM_ERROR"):e.data.error.includes("Different face")?t("DIFFERENT_FACE_ERROR"):t("INTERNAL_ERROR"),c.close(),cleanup()}else"check-parent-commandeer"===e.data.type&&c.postMessage({type:"confirm-parent-commandeer",nonce:r,livenessCheck:o},s)}window.addEventListener("message",handler);const l=setInterval((()=>{c.closed&&!a&&(a=!0,t("CANCELLED"),cleanup())}),500)}))}};export{e as default};
